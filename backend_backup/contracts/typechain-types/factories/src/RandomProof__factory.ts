/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { RandomProof, RandomProofInterface } from "../../src/RandomProof";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "vrfCoordinator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "keyHash",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "callbackGasLimit",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "entityHash",
        type: "string",
      },
    ],
    name: "EntityHashAlreadyProcessed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEntityHash",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    inputs: [],
    name: "RandomnessNotFulfilled",
    type: "error",
  },
  {
    inputs: [],
    name: "RequestNotFound",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "entityHash",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "RandomnessFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "entityHash",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "salt",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "RandomnessRequested",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "entityHash",
        type: "string",
      },
    ],
    name: "getRandomnessForEntityHash",
    outputs: [
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "fulfilled",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "getRequestDetails",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "entityHash",
            type: "string",
          },
          {
            internalType: "string",
            name: "salt",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "fulfilled",
            type: "bool",
          },
          {
            internalType: "address",
            name: "requester",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "requestBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fulfilledBlock",
            type: "uint256",
          },
        ],
        internalType: "struct RandomProof.RandomnessRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "entityHash",
        type: "string",
      },
    ],
    name: "getRequestIdForEntityHash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "entityHash",
        type: "string",
      },
    ],
    name: "isEntityHashProcessed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "entityHash",
        type: "string",
      },
      {
        internalType: "string",
        name: "salt",
        type: "string",
      },
    ],
    name: "requestRandomness",
    outputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101206040523480156200001257600080fd5b5060405162001ff838038062001ff883398181016040528101906200003891906200029f565b828073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506200008a678bdb43d291cafbd860c01b6200017160201b60201c565b620000a667c5ef7c833b4a32e860c01b6200017160201b60201c565b8273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050620000f6678d1fd5369e96abff60c01b6200017160201b60201c565b8367ffffffffffffffff1660c08167ffffffffffffffff16815250506200012e67c3e588e76f753f8f60c01b6200017160201b60201c565b8160e081815250506200015267912b39cd9d90de1f60c01b6200017160201b60201c565b8063ffffffff166101008163ffffffff16815250505050505062000311565b50565b600080fd5b600067ffffffffffffffff82169050919050565b620001988162000179565b8114620001a457600080fd5b50565b600081519050620001b8816200018d565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001eb82620001be565b9050919050565b620001fd81620001de565b81146200020957600080fd5b50565b6000815190506200021d81620001f2565b92915050565b6000819050919050565b620002388162000223565b81146200024457600080fd5b50565b60008151905062000258816200022d565b92915050565b600063ffffffff82169050919050565b62000279816200025e565b81146200028557600080fd5b50565b60008151905062000299816200026e565b92915050565b60008060008060808587031215620002bc57620002bb62000174565b5b6000620002cc87828801620001a7565b9450506020620002df878288016200020c565b9350506040620002f28782880162000247565b9250506060620003058782880162000288565b91505092959194509250565b60805160a05160c05160e05161010051611c9b6200035d60003960006107fb015260006107b7015260006107d80152600061077b01526000818161017601526101ca0152611c9b6000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631fe543e31461006757806345471e7c146100835780639b4f7eee146100b3578063d479ea73146100e4578063db19295c14610114578063f34d4c6314610144575b600080fd5b610081600480360381019061007c9190611222565b610174565b005b61009d60048036038101906100989190611333565b610234565b6040516100aa9190611397565b60405180910390f35b6100cd60048036038101906100c89190611333565b6102a5565b6040516100db9291906113c1565b60405180910390f35b6100fe60048036038101906100f991906113ea565b6105de565b60405161010b9190611462565b60405180910390f35b61012e60048036038101906101299190611333565b610aac565b60405161013b9190611462565b60405180910390f35b61015e6004803603810190610159919061147d565b610bdc565b60405161016b919061162b565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461022657337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f400000000000000000000000000000000000000000000000000000000815260040161021d92919061165c565b60405180910390fd5b6102308282610ec8565b5050565b600061024a679e8b0f887f80c51060c01b611027565b61025e679b7bac1194cfdcce60c01b611027565b61027267605a1f7d6938655a60c01b611027565b60028260405161028291906116c1565b908152602001604051809103902060009054906101000a900460ff169050919050565b6000806102bc67339eba43f839664560c01b611027565b6102d06722831e8ab932055160c01b611027565b6102e467bf874b7a72c0423c60c01b611027565b60006001846040516102f691906116c1565b908152602001604051809103902054905061031b677c0118b62825d13560c01b611027565b61032f67d81517869ffeddc960c01b611027565b600081036103915761034b672750383306c1952260c01b611027565b61035f67a8fc387caa160e6c60c01b611027565b6040517f4b13b31e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103a5679eb2bba2acf5acae60c01b611027565b6103b967606e4f4864ba437460c01b611027565b6103cd6735ccddd535f34cf760c01b611027565b60008060008381526020019081526020016000206040518060e00160405290816000820180546103fc90611707565b80601f016020809104026020016040519081016040528092919081815260200182805461042890611707565b80156104755780601f1061044a57610100808354040283529160200191610475565b820191906000526020600020905b81548152906001019060200180831161045857829003601f168201915b5050505050815260200160018201805461048e90611707565b80601f01602080910402602001604051908101604052809291908181526020018280546104ba90611707565b80156105075780601f106104dc57610100808354040283529160200191610507565b820191906000526020600020905b8154815290600101906020018083116104ea57829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900460ff161515151581526020016003820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820154815260200160058201548152505090506105b5674f741108749c7fa560c01b611027565b6105c967e29a5082d752e57160c01b611027565b80604001518160600151935093505050915091565b60006105f4677153e374791a595460c01b611027565b61060867109fb5e82a2fd37860c01b611027565b61061c6731b95699a4470ba860c01b611027565b604083511461067f576106396742551ff38da50bef60c01b611027565b61064d67df223237043f454560c01b611027565b6040517f37ad151f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61069367c622002871da4bb060c01b611027565b6106a76707a17e6c9b1a2a7f60c01b611027565b6106bb67601f42314f8b981d60c01b611027565b6002836040516106cb91906116c1565b908152602001604051809103902060009054906101000a900460ff1615610751576107006773e2bceca4c1fc0b60c01b611027565b610714673eecd22dcb74612b60c01b611027565b826040517fb81667060000000000000000000000000000000000000000000000000000000081526004016107489190611782565b60405180910390fd5b61076567cba970605420cfe260c01b611027565b61077967adbbba0432e274c660c01b611027565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635d3b1d307f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060037f000000000000000000000000000000000000000000000000000000000000000060016040518663ffffffff1660e01b815260040161083c95949392919061181c565b6020604051808303816000875af115801561085b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087f9190611884565b9050610895675765ca3cc30326e460c01b611027565b6040518060e00160405280848152602001838152602001600081526020016000151581526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014381526020016000815250600080838152602001908152602001600020600082015181600001908161090a9190611a5d565b5060208201518160010190816109209190611a5d565b506040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555060808201518160030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816004015560c082015181600501559050506109bd67bb57fcb57587178660c01b611027565b806001846040516109ce91906116c1565b9081526020016040518091039020819055506109f467bbc4c8ec8f564fff60c01b611027565b6001600284604051610a0691906116c1565b908152602001604051809103902060006101000a81548160ff021916908315150217905550610a3f679d74a5b068ebf71c60c01b611027565b610a5367d5080477e129617260c01b611027565b3373ffffffffffffffffffffffffffffffffffffffff16817ffaada18c5b3c4e292f39d28a2d27825807c50fa07c9a801ca9d94602529f00d8858543604051610a9e93929190611b2f565b60405180910390a392915050565b6000610ac26787c9a8032c0dcda460c01b611027565b610ad66780463abf715fed5660c01b611027565b610aea67837173c3610134f860c01b611027565b6000600183604051610afc91906116c1565b9081526020016040518091039020549050610b2167e92ac70910b9fcf660c01b611027565b610b3567133f4d4d4bc110cf60c01b611027565b60008103610b9757610b5167f34afd723eb3cb3660c01b611027565b610b6567f1971ee86235368b60c01b611027565b6040517f4b13b31e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610bab67a1025435911626b360c01b611027565b610bbf676121027b9fdea35560c01b611027565b610bd367eabcf56b23c2e54660c01b611027565b80915050919050565b610be461102a565b610bf867e21dbeb14d877cf160c01b611027565b610c0c67fa44abc8d68ab39860c01b611027565b610c2067603902dde03f120a60c01b611027565b60008060008481526020019081526020016000206040518060e0016040529081600082018054610c4f90611707565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7b90611707565b8015610cc85780601f10610c9d57610100808354040283529160200191610cc8565b820191906000526020600020905b815481529060010190602001808311610cab57829003601f168201915b50505050508152602001600182018054610ce190611707565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0d90611707565b8015610d5a5780601f10610d2f57610100808354040283529160200191610d5a565b820191906000526020600020905b815481529060010190602001808311610d3d57829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900460ff161515151581526020016003820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481526020016005820154815250509050610e0867c86d5bd1eb4ea56460c01b611027565b610e1c678ae38caf8add468d60c01b611027565b600081600001515103610e8357610e3d67ba539c516b53a9ba60c01b611027565b610e516708d3c3555c67d00b60c01b611027565b6040517f4b13b31e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e9767d757f8264adf4ea260c01b611027565b610eab67e17f83a36a55082d60c01b611027565b610ebf6769e9bfe3ad91285660c01b611027565b80915050919050565b610edc67770f51ad147c1fd960c01b611027565b610ef067a357aa7cae18825160c01b611027565b610f046794eabf9d2a4b107260c01b611027565b60008060008481526020019081526020016000209050610f2e67e5d88a9e2a9c0e0b60c01b611027565b81600081518110610f4257610f41611b74565b5b60200260200101518160020181905550610f66671acaff289bbe940360c01b611027565b60018160030160006101000a81548160ff021916908315150217905550610f9767c6ac5a06d0ede6ee60c01b611027565b438160050181905550610fb4676cbd59acc1769fe360c01b611027565b610fc86786df886fcac809d660c01b611027565b827fc164fb5df4dab625c62c1bf03462dd07f0ac21e5524b5ef7b5917f159426177b826000018460008151811061100257611001611b74565b5b60200260200101514360405161101a93929190611c27565b60405180910390a2505050565b50565b6040518060e00160405280606081526020016060815260200160008152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6110a681611093565b81146110b157600080fd5b50565b6000813590506110c38161109d565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611117826110ce565b810181811067ffffffffffffffff82111715611136576111356110df565b5b80604052505050565b600061114961107f565b9050611155828261110e565b919050565b600067ffffffffffffffff821115611175576111746110df565b5b602082029050602081019050919050565b600080fd5b600061119e6111998461115a565b61113f565b905080838252602082019050602084028301858111156111c1576111c0611186565b5b835b818110156111ea57806111d688826110b4565b8452602084019350506020810190506111c3565b5050509392505050565b600082601f830112611209576112086110c9565b5b813561121984826020860161118b565b91505092915050565b6000806040838503121561123957611238611089565b5b6000611247858286016110b4565b925050602083013567ffffffffffffffff8111156112685761126761108e565b5b611274858286016111f4565b9150509250929050565b600080fd5b600067ffffffffffffffff82111561129e5761129d6110df565b5b6112a7826110ce565b9050602081019050919050565b82818337600083830152505050565b60006112d66112d184611283565b61113f565b9050828152602081018484840111156112f2576112f161127e565b5b6112fd8482856112b4565b509392505050565b600082601f83011261131a576113196110c9565b5b813561132a8482602086016112c3565b91505092915050565b60006020828403121561134957611348611089565b5b600082013567ffffffffffffffff8111156113675761136661108e565b5b61137384828501611305565b91505092915050565b60008115159050919050565b6113918161137c565b82525050565b60006020820190506113ac6000830184611388565b92915050565b6113bb81611093565b82525050565b60006040820190506113d660008301856113b2565b6113e36020830184611388565b9392505050565b6000806040838503121561140157611400611089565b5b600083013567ffffffffffffffff81111561141f5761141e61108e565b5b61142b85828601611305565b925050602083013567ffffffffffffffff81111561144c5761144b61108e565b5b61145885828601611305565b9150509250929050565b600060208201905061147760008301846113b2565b92915050565b60006020828403121561149357611492611089565b5b60006114a1848285016110b4565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156114e45780820151818401526020810190506114c9565b60008484015250505050565b60006114fb826114aa565b61150581856114b5565b93506115158185602086016114c6565b61151e816110ce565b840191505092915050565b61153281611093565b82525050565b6115418161137c565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061157282611547565b9050919050565b61158281611567565b82525050565b600060e08301600083015184820360008601526115a582826114f0565b915050602083015184820360208601526115bf82826114f0565b91505060408301516115d46040860182611529565b5060608301516115e76060860182611538565b5060808301516115fa6080860182611579565b5060a083015161160d60a0860182611529565b5060c083015161162060c0860182611529565b508091505092915050565b600060208201905081810360008301526116458184611588565b905092915050565b61165681611567565b82525050565b6000604082019050611671600083018561164d565b61167e602083018461164d565b9392505050565b600081905092915050565b600061169b826114aa565b6116a58185611685565b93506116b58185602086016114c6565b80840191505092915050565b60006116cd8284611690565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061171f57607f821691505b602082108103611732576117316116d8565b5b50919050565b600082825260208201905092915050565b6000611754826114aa565b61175e8185611738565b935061176e8185602086016114c6565b611777816110ce565b840191505092915050565b6000602082019050818103600083015261179c8184611749565b905092915050565b6000819050919050565b6117b7816117a4565b82525050565b600067ffffffffffffffff82169050919050565b6117da816117bd565b82525050565b600061ffff82169050919050565b6117f7816117e0565b82525050565b600063ffffffff82169050919050565b611816816117fd565b82525050565b600060a08201905061183160008301886117ae565b61183e60208301876117d1565b61184b60408301866117ee565b611858606083018561180d565b611865608083018461180d565b9695505050505050565b60008151905061187e8161109d565b92915050565b60006020828403121561189a57611899611089565b5b60006118a88482850161186f565b91505092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026119137fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826118d6565b61191d86836118d6565b95508019841693508086168417925050509392505050565b6000819050919050565b600061195a61195561195084611093565b611935565b611093565b9050919050565b6000819050919050565b6119748361193f565b61198861198082611961565b8484546118e3565b825550505050565b600090565b61199d611990565b6119a881848461196b565b505050565b5b818110156119cc576119c1600082611995565b6001810190506119ae565b5050565b601f821115611a11576119e2816118b1565b6119eb846118c6565b810160208510156119fa578190505b611a0e611a06856118c6565b8301826119ad565b50505b505050565b600082821c905092915050565b6000611a3460001984600802611a16565b1980831691505092915050565b6000611a4d8383611a23565b9150826002028217905092915050565b611a66826114aa565b67ffffffffffffffff811115611a7f57611a7e6110df565b5b611a898254611707565b611a948282856119d0565b600060209050601f831160018114611ac75760008415611ab5578287015190505b611abf8582611a41565b865550611b27565b601f198416611ad5866118b1565b60005b82811015611afd57848901518255600182019150602085019450602081019050611ad8565b86831015611b1a5784890151611b16601f891682611a23565b8355505b6001600288020188555050505b505050505050565b60006060820190508181036000830152611b498186611749565b90508181036020830152611b5d8185611749565b9050611b6c60408301846113b2565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008154611bb081611707565b611bba8186611738565b94506001821660008114611bd55760018114611beb57611c1e565b60ff198316865281151560200286019350611c1e565b611bf4856118b1565b60005b83811015611c1657815481890152600182019150602081019050611bf7565b808801955050505b50505092915050565b60006060820190508181036000830152611c418186611ba3565b9050611c5060208301856113b2565b611c5d60408301846113b2565b94935050505056fea2646970667358221220e79b2513a70ebbd7b8f20dd8996f31501807e7c608287c712ce5c8bbd1c83be464736f6c63430008130033";

type RandomProofConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RandomProofConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RandomProof__factory extends ContractFactory {
  constructor(...args: RandomProofConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    subscriptionId: BigNumberish,
    vrfCoordinator: AddressLike,
    keyHash: BytesLike,
    callbackGasLimit: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      subscriptionId,
      vrfCoordinator,
      keyHash,
      callbackGasLimit,
      overrides || {}
    );
  }
  override deploy(
    subscriptionId: BigNumberish,
    vrfCoordinator: AddressLike,
    keyHash: BytesLike,
    callbackGasLimit: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      subscriptionId,
      vrfCoordinator,
      keyHash,
      callbackGasLimit,
      overrides || {}
    ) as Promise<
      RandomProof & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RandomProof__factory {
    return super.connect(runner) as RandomProof__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RandomProofInterface {
    return new Interface(_abi) as RandomProofInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): RandomProof {
    return new Contract(address, _abi, runner) as unknown as RandomProof;
  }
}
