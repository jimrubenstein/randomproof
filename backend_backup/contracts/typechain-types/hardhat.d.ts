/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "VRFCoordinatorV2Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRFCoordinatorV2Interface__factory>;
    getContractFactory(
      name: "VRFConsumerBaseV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRFConsumerBaseV2__factory>;
    getContractFactory(
      name: "IRandomProof",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRandomProof__factory>;
    getContractFactory(
      name: "MaliciousReentrant",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MaliciousReentrant__factory>;
    getContractFactory(
      name: "MockVRFCoordinator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockVRFCoordinator__factory>;
    getContractFactory(
      name: "VRFCoordinatorV2Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRFCoordinatorV2Mock__factory>;
    getContractFactory(
      name: "VRFCoordinatorV2PlusMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRFCoordinatorV2PlusMock__factory>;
    getContractFactory(
      name: "RandomProof",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RandomProof__factory>;
    getContractFactory(
      name: "RandomProofOptimized",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RandomProofOptimized__factory>;

    getContractAt(
      name: "VRFCoordinatorV2Interface",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VRFCoordinatorV2Interface>;
    getContractAt(
      name: "VRFConsumerBaseV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VRFConsumerBaseV2>;
    getContractAt(
      name: "IRandomProof",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRandomProof>;
    getContractAt(
      name: "MaliciousReentrant",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MaliciousReentrant>;
    getContractAt(
      name: "MockVRFCoordinator",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MockVRFCoordinator>;
    getContractAt(
      name: "VRFCoordinatorV2Mock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VRFCoordinatorV2Mock>;
    getContractAt(
      name: "VRFCoordinatorV2PlusMock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VRFCoordinatorV2PlusMock>;
    getContractAt(
      name: "RandomProof",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RandomProof>;
    getContractAt(
      name: "RandomProofOptimized",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RandomProofOptimized>;

    deployContract(
      name: "VRFCoordinatorV2Interface",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VRFCoordinatorV2Interface>;
    deployContract(
      name: "VRFConsumerBaseV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VRFConsumerBaseV2>;
    deployContract(
      name: "IRandomProof",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRandomProof>;
    deployContract(
      name: "MaliciousReentrant",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MaliciousReentrant>;
    deployContract(
      name: "MockVRFCoordinator",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockVRFCoordinator>;
    deployContract(
      name: "VRFCoordinatorV2Mock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VRFCoordinatorV2Mock>;
    deployContract(
      name: "VRFCoordinatorV2PlusMock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VRFCoordinatorV2PlusMock>;
    deployContract(
      name: "RandomProof",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RandomProof>;
    deployContract(
      name: "RandomProofOptimized",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RandomProofOptimized>;

    deployContract(
      name: "VRFCoordinatorV2Interface",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VRFCoordinatorV2Interface>;
    deployContract(
      name: "VRFConsumerBaseV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VRFConsumerBaseV2>;
    deployContract(
      name: "IRandomProof",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRandomProof>;
    deployContract(
      name: "MaliciousReentrant",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MaliciousReentrant>;
    deployContract(
      name: "MockVRFCoordinator",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockVRFCoordinator>;
    deployContract(
      name: "VRFCoordinatorV2Mock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VRFCoordinatorV2Mock>;
    deployContract(
      name: "VRFCoordinatorV2PlusMock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VRFCoordinatorV2PlusMock>;
    deployContract(
      name: "RandomProof",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RandomProof>;
    deployContract(
      name: "RandomProofOptimized",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RandomProofOptimized>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
